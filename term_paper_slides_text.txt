1. Титул

Здравствуйте! Я – Абдуллаева Евгения, мой научный руководитель – Алисейчик Павел Александрович.

Тема моей курсовой работы: «Перенос сообщений из системы сопровождения «Практикума на ЭВМ» «Фо́рум МГУ» в систему сопровождения «МГУ Контест»».

***

2. Цель работы

За годы сопровождения курса «Практикум на ЭВМ» в филиале МГУ в Ташкенте системой «Форум МГУ» накоплена достаточно большая база сообщений. Данная база является ценным образовательным ресурсом, так как включает вопросы студентов и ответы преподавателей по различным этапам и темам курса «Практикум на ЭВМ», в рамках которого происходит обучение студентов университета программированию. В связи с созданием системы «МГУ Контест» возникла необходимость переноса базы сообщений в новую систему. Сохранение накопленной базы сообщений ведет как к экономии времени преподавателей, освобождая их от необходимости многократно отвечать на повторяющиеся вопросы, так и студентов, которым не придется ожидать ответа на заданный вопрос.

Цель моей курсовой работы – реализовать процедуры для автоматического переноса базы сообщений из системы «Форум МГУ» в систему «МГУ Контест».

***

3. Общая структура систем

Обе упомянутые системы поддержки «Практикума на ЭВМ» представлены проектами, построенными с использованием фреймворка для веб-приложений Django, написанного на языке Python, поэтому при работе с базами данных проектов используются в основном сре́дства, предоставляемые Django и лишь отчасти реляционной системой управления базами данных MySQL.

Проект на Django строится из одного или нескольких приложений. Django использует схему разделения данных приложения, пользовательского интерфейса и управляющей логики на три отдельных компонента: модель, представление и контроллер.

Модели в Django являются источником информации о данных, содержат поля и описание данных, которые мы храним, и реализованы как классы Python. Каждая модель отображается в одну таблицу базы данных.

***

4. Схема базы данных системы «Форум МГУ» 

База данных проекта «Форум МГУ» представлена моделями: доска, тема, пользователь и сообщение. Здесь модель Board (доска) представляет собой наиболее общую сущность, соответствующую этапу курса «Практикум на ЭВМ» или иной связанной с программированием дисциплине. Тема соответствует подразделу доски. В процессе работы мы будем взаимодействовать со всеми перечисленными моделями проекта «Форум МГУ».

***

5. Схема базы данных системы «МГУ Контест» 

База данных проекта «МГУ Контест» представлена более сложной структурой.

***

6. Фрагмент схемы базы данных системы «МГУ Контест»

Для переноса сообщений взаимодействовать будем со следующими моделями системы: курс, раздел, задача, пользователь, аккаунт пользователя, комментарий.

***

7. План работы

Основная работа разделена на следующие части:
подготовка сообщений к переносу, 
экспорт сообщений, 
импорт сообщений, как комментариев в локальную версию сайта "МГУ Контест",
редактирование и экспорт комментариев,
импорт аккаунтов и комментариев в стабильную версию сайта "МГУ Контест".

***

8. Разделение совмещенных сообщений.

Первая задача для подготовки сообщений к переносу: определить, какие сообщения следует переносить, так как обязательно соответствие между темами, обсуждаемыми в сообщениях, и содержанием курсов системы "МГУ Контест". Выделение необходимых сообщений осуществляется при помощи специальной функции, позволяющей просматривать список сообщений, сгруппированных по их принадлежности к доскам и темам.

После решения данной задачи возникает необходимость разделенных сообщений. В системе «Фо́рум МГУ» преподаватели вставляли некоторые ответы на вопросы студентов непосредственно в текст вопроса и выделяли ответ каким-либо цветом. При этом форматирование осуществлялось с помощью тегов языка разметки BBCode. В системе "МГУ Контест" существует возможность привязывать ответ к конкретному комментарию, соответственно возникает задача выделить отдельные сообщения из совмещенных, сохраняя при этом цепочки вопросов и ответов. Для решения задачи мы создаем новую модель сообщения, для сохранения полученных сообщений и производим непосредственно разделение сообщений с помощью специальной функции, использующей для поиска вхождений сообщений преподавателей и студентов модуль re (для работы с регулярными выражениями) языка Python.

***

9. Стандартизация имен пользователей.

Чтобы привести пользователей, оставлявших сообщения к промежуточному состоянию, предшествующему их переносу, создадим новую модель данных User, с полями, соответствующими некоторым полям модели Account проекта "МГУ Контест". Создадим пользователей как объектов новой модели и свяжем полученных пользователей с сообщениями.

Каждый пользователь в системе "Форум МГУ" обладает собственным именем, возможно, не уникальным, наличие которого обеспечивается полем realname модели Member. Это имя определяется самим пользователем-человеком при регистрации на сайте. При этом на формат имени не накладываются какие-либо ограничения.

Полю realname модели Member системы "Форум МГУ" неформально соответствуют поля firstname и lastname модели User в системе "МГУ Контест". Для записи имен и фамилий используется исключительно кириллический алфавит, первые буквы имен и фамилий должны быть заглавнями, остальные -- строчными. Возникает задача: привести имена пользователей в формат, требуемый в системе "МГУ Контест". Было бы не сложно автоматизировать это приведение, если бы задача состояла только в транслитерации и замене первых букв на заглавные, при условии, что имя и фамилия находятся в определенном порядке. Однако исходный вид имен пользователей не удовлетворяет описанным условиям, поэтому приведение осуществляется вручную с использованием специальной функции для вывода списка пользователей со ссылками на страницы их редактирования.

После приведения полного имени пользователей к требуемому формату, разделяем полное имя на непосредственно имя и фамилию.

Кроме имени и фамилии каждый пользователь обладает коротким именем, которое в системе "МГУ Контест" создается автоматически и имеет формат, как в примере на слайде:
msu_<год поступления>_<двузначный порядковый номер студента>

Замена коротких имен пользователей на имена в требуемом формате производится при помощи специальной функции.

***

10. Распределение сообщений.

В системе "МГУ Контест" каждый комментарий имеет поля, указывающие его принадлежность к какому-либо объекту системы (курсу, разделу или задаче).

Чтобы сообщения из "Форум МГУ" при переносе были корректно отнесены к соответствующим их содержанию объектам, необходимо предварительно задать их отношение к данным объектам. Для решения данной задачи необходимо экспортировать в каком-либо виде список курсов, разделов и задач из системы "МГУ Контест". Для сохранения списка объектов в файле вне базы данных выбран текстовый формат обмена данными JSON, так как он позволяет использовать те же структуры данных, что и язык Python.

В системе "Форум МГУ" создана модель Identifier для идентификаторов полученных объектов. После импорта и сохранения идентификаторов из JSON-файла как объектов модели Identifier, в модель Message добавлено поле identifier, содержащее внешний ключ, указывающий на объект модели Identifier.

Теперь можно приступить непосредственно к распределению сообщений, то есть заданию отношений сообщений к объектам системы «МГУ Контест». Распределение сообщений осуществляется с частично с помощью SQL-команд для задания идентификаторов сразу многих сообщений, частично вручную с помощью инструмента администрирования, предоставляемого Django и специальной функции, позволяющей просматривать сообщения в удобном для распределения виде.

Гарантируется, что сообщения, находящиеся в одной цепочке обязательно относятся к одному и тому же объекту системы "МГУ Контест", следовательно, для ускорения ручного распределения сообщений разумным решением является указание идентификаторов вручную только для первых сообщений в цепочках, а для остальных сообщений копировать значение идентификатора первого сообщения в цепочке. Для этого реализована функция для автоматической генерации SQL-команд, задающих значения идентификаторов.

После распределения сообщений и применения всех полученных SQL-команд, получены сообщения, готовые к экспорту.

***

11. Экспорт сообщений

Для экспорта сообщений из базы данных системы "Форум МГУ" реализована специальная функция, которая для каждого сообщения добавляет в список комментариев словарь вида, представленного на слайде и сериализует полученный список в JSON-файл вне базы данных. Теперь сообщения готовы к переносу.

***

12. Импорт комментариев в локальную версию сайта.

Перед добавлением комментариев в стабильную версию сайта "МГУ Контест" необходимо редактирование текстов комментариев, поэтому сначала комментарии импортируются в локальную версию сайта.

В системе "МГУ Контест" в модели Comment добавляем поле, которое будет содержать уникальный идентификатор комментария в системе "Форум МГУ", это необходимо для того, чтобы иметь возможность сохранить связи в цепочках комментариев.

Для импорта реализована специальная функция, в которой создаются комментарии, как объекты модели Comment и автоматически задаются значения полей, не присутствовавших в модели сообщений в системе "Форум МГУ".

***

13. Редактирование и экспорт комментариев.

После импорта комментариев в систему "МГУ Контест" возникает задача редактирования текстов комментариев.
Необходимо:
- объединить в цепочки связанные по смыслу комментарии,
- изменить уровни вложенности комментариев, если необходимо,
- сделать все ссылки, содержащиеся в тексте комментариев кликабельными.
Задача решается вручную с использованием инструмента администрирования Django.

По завершении редактирования, комментарии и аккаунты авторов комментариев экспортируются из базы данных локальной версии сайта в JSON-файлы с помощью специальных функций.

14. Импорт аккаунтов и комментариев в стабильную версию сайта.

Функции для импорта аккаунтов и комментариев реализуем в виде миграций. Миграции представляют собой предоставляемый Django способ внесения изменений моделей в схему базы данных, а также изменения данных в базе. Основной операцией, выполняемой в миграциях данных является операция, запускающая пользовательский Python-код, этой операции должны быть переданы две функции: code - непосредственно выполняющая все необходимые действия с данными и reverse_code - обращающая все действия, выполненные предыдущей функцией в случае возникновения каких-либо ошибок в миграции или отмене миграции. Реализуем требуемые функции для импорта аккаунтов и функции для импорта комментариев. При импорте комментариев существующие в базе стабильного сайта комментарии предварительно сохраняются и временно удаляются, затем добавляются импортируемые комментарии и ранее существовавшие, это необходимо для сохранения порядка следования комментариев.

***

15. Результаты

Таким образом реализована система для переноса базы сообщений из системы "Форум МГУ" в систему "МГУ Контест".

Реализация всех функций доступна в моих GitHub-репозиториях, ссылки на которые указаны в приложениях к тексту работы.

СЛЕДУЮЩИЙ СЛАЙД
На данном примере можно посмотреть, как в результате выглядит представление комментариев в системе  "МГУ Контест".

Хочу выразить благодарность Павлу Александровичу Алисейчику за научное руководство и Руслану Бекташеву, занимающемуся непосредственно разработкой сайта "МГУ Контест".
СПАСИБО ЗА ВНИМАНИЕ !

В дальнейшем планирую продолжать работу над сайтом "МГУ Контест".